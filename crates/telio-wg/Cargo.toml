[package]
name = "telio-wg"
version = "0.1.0"
edition = "2018"
license = "GPL-3.0-only"
repository = "https://github.com/NordSecurity/libtelio"
publish = false

[features]
test-adapter = []

[dependencies]
# pqcrypto version is fixed, because the newer version implements incompatible kyber kem according to draft specs
pqcrypto-kyber = { version = "=0.7.6", default-features = false, features = ["std"] }
pqcrypto-traits = "0.3.5"
slog-stdlog = "4.1.0"
wireguard-uapi = { version = "2.0.4", features = ["xplatform"]}

async-trait.workspace = true
boringtun.workspace = true
futures.workspace = true
hex.workspace = true
ipnetwork.workspace = true
lazy_static.workspace = true
libc.workspace = true
tracing.workspace = true
mockall = { workspace = true, optional = true }
pnet_packet.workspace = true
serde.workspace = true
serde_json.workspace = true
slog.workspace = true
rand.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full"] }

telio-crypto.workspace = true
telio-model.workspace = true
telio-sockets.workspace = true
telio-task.workspace = true
telio-utils.workspace = true

[dev-dependencies]
base64.workspace = true
mockall.workspace = true
ntest.workspace = true
pretty_assertions.workspace = true
tokio = { workspace = true, features = ["test-util"] }

telio-firewall.workspace = true
telio-task = { workspace = true, features = ["test-util"] }
telio-test.workspace = true

[build-dependencies]
cc.workspace = true

[target.'cfg(windows)'.dependencies]
ipnet.workspace = true
sha2.workspace = true
winapi = { workspace = true, features = ["nldef"] }

wireguard-nt = { git = "https://github.com/NordSecurity/wireguard-nt-rust-wrapper", tag = "v1.0.3" }

wg-go-rust-wrapper = { path = "../../wireguard-go-rust-wrapper" }
