name: Tests
on: [workflow_call]
permissions: {}

jobs:
  test-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # v1.0.3
        with:
          command: test
          args: --all -- --nocapture
      - uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # v1.0.3
        with:
          command: test
          args: --all --features pretend_to_be_macos -- --nocapture

  test-windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # v1.0.3
        with:
          command: test
          args: --all --lib -- --nocapture

  test-mac:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # v1.0.3
        with:
          command: test
          args: --all --lib -- --nocapture

  test-replacement-script:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Test replacement script
        run: python3 ci/test_replace_string.py

  test-build-version-replacement:
    strategy:
      matrix:
        include:
          - arch: x86_64
            target_os: macos
            runner: macos-13
          - arch: aarch64
            target_os: macos
            runner: macos-14
          - arch: x86_64
            target_os: linux
            runner: ubuntu-22.04
          - arch: x86_64
            target_os: windows
            runner: windows-2022
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          submodules: true
      - uses: Swatinem/rust-cache@b8a6852b4f997182bdea832df3f9e153038b5191 # v2.6.0
        with:
          key: ${{ matrix.target_os }}-${{ matrix.arch }}
      - name: Setup MSVC
        uses: egor-tensin/vs-shell@9a932a62d05192eae18ca370155cf877eecc2202 # v2.1
        if: ${{ matrix.target_os == 'windows' }}
      - name: Build libtelio
        run: python3 ci/build_libtelio.py build ${{ matrix.target_os }} ${{ matrix.arch }} --msvc
      - name: Replace and Test version
        run: |
          if [[ ${{ matrix.target_os }} == "macos" ]]; then
              DIST_PATH="dist/darwin/macos"
          elif [[ ${{ matrix.target_os }} == "linux" ]]; then
              DIST_PATH="dist/linux"
          else
              echo "Unknown or unsupported target OS"
              exit 1
          fi
          ./ci/insert_libtelio_version.py -n TEST_VERSION -p ./${DIST_PATH}
          ./${DIST_PATH}/release/${{ matrix.arch }}/tcli
          head -n 1 tcli.log | grep -a "TEST_VERSION"
        if: ${{ matrix.target_os != 'windows' }}
      - name: Replace and Test version
        run: |
          python ./ci/insert_libtelio_version.py -n TEST_VERSION -p ./dist/windows
          Start-Process -FilePath dist/windows/release/x86_64/tcli.exe -WindowStyle Hidden
          type tcli.log | findstr /C:"TEST_VERSION"
        if: ${{ matrix.target_os == 'windows' }}
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: libtelio-build-${{ matrix.target_os }}-${{ matrix.arch }}-with-replaced-version
          path: dist/