name: Build
on: [workflow_call]
permissions: {}

jobs:
  generate-bindings:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: true
      - name: Generate bindings
        run: python3 ci/build_libtelio.py bindings --dockerized
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: libtelio-bindings
          path: dist/

  build-native:
    strategy:
      matrix:
        include:
          - arch: x86_64
            target_os: macos
            runner: macos-13
          - arch: aarch64
            target_os: macos
            runner: macos-14
          - arch: aarch64
            target_os: ios
            runner: macos-13
          - arch: x86_64
            target_os: windows
            runner: windows-2022
          - arch: aarch64
            target_os: windows
            runner: windows-2022
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: true
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          key: ${{ matrix.target_os }}-${{ matrix.arch }}
      - name: Setup MSVC
        uses: egor-tensin/vs-shell@9a932a62d05192eae18ca370155cf877eecc2202 # v2.1
        if: ${{ matrix.target_os == 'windows' }}
      - name: install python3-requests
        run: pip3 install requests==2.32.3 --break-system-packages
      - name: Build libtelio
        run: python3 ci/build_libtelio.py build ${{ matrix.target_os }} ${{ matrix.arch }} --msvc
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: libtelio-build-native-${{ matrix.target_os }}-${{ matrix.arch }}
          path: dist/

  build-docker:
    strategy:
      matrix:
        include:
          - arch: x86_64
            target_os: linux
          - arch: i686
            target_os: linux
          - arch: aarch64
            target_os: linux
          - arch: armv7hf
            target_os: linux
          - arch: armv5
            target_os: linux
          - arch: x86_64
            target_os: android
          - arch: i686
            target_os: android
          - arch: aarch64
            target_os: android
          - arch: armv7
            target_os: android
          - arch: x86_64
            target_os: windows
    runs-on: ubuntu-22.04
    container: |-
      ${{ matrix.target_os == 'linux' && 'ghcr.io/nordsecurity/build-linux-rust:debug-492b68ce2a8bdff3f94366bcfb2728da259c8c39' ||
          matrix.target_os == 'android' && 'ghcr.io/nordsecurity/build-android-rust:debug-492b68ce2a8bdff3f94366bcfb2728da259c8c39' ||
          'ghcr.io/nordsecurity/build-windows-rust:debug-492b68ce2a8bdff3f94366bcfb2728da259c8c39' }}
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: true
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          key: ${{ matrix.target_os }}-${{ matrix.arch }}
      - name: Build libtelio
        run: python3 ci/build_libtelio.py build ${{ matrix.target_os }} ${{ matrix.arch }}
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: libtelio-build-docker-${{ matrix.target_os }}-${{ matrix.arch }}
          path: dist/
