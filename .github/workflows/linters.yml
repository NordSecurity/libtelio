name: Linters
on: [workflow_call]
permissions: {}

jobs:
  check:
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
          with:
            command: check
            args: --target "x86_64-unknown-linux-gnu" --lib --color always
  clippy:
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
          with:
            components: clippy
        - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
          with:
            command: clippy
            args: --target "x86_64-unknown-linux-gnu" --lib --color always -- --deny warnings --allow unknown-lints -W clippy::expect_used -W clippy::panic -W clippy::unwrap_used
  clippy-win:
      runs-on: windows-2022
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
          with:
            target: x86_64-pc-windows-gnu
            components: clippy
        - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
          with:
            command: clippy
            args: --target "x86_64-pc-windows-gnu" --lib --color always -- --deny warnings --allow unknown-lints -W clippy::expect_used -W clippy::panic -W clippy::unwrap_used
  clippy-mac:
      runs-on: macos-12
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
          with:
            target: x86_64-apple-darwin
            components: clippy
        - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
          with:
            command: clippy
            args: --target "x86_64-apple-darwin" --lib --color always -- --deny warnings --allow unknown-lints -W clippy::expect_used -W clippy::panic -W clippy::unwrap_used
  deny:
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: EmbarkStudios/cargo-deny-action@e0a440755b184aa50374330fa75cca0f84fcb59a # v1.5.2
          with:
            rust-version: 1.64.0 # NOTE: Runs in its own docker container and doesn't support toolchain files
  udeps:
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
          with:
            toolchain: nightly
            override: true
        - uses: aig787/cargo-udeps-action@1cd634a329e14ccfbccfe7c96497d14dac24a743 # v1
          with:
            version: 'v0.1.39'
            args: '--workspace --locked --output human --backend depinfo'
  nagger:
      runs-on: ubuntu-22.04
      env:
        RUSTFLAGS: -Dwarnings
        # TODO: set DYLINT_LIBRARY_PATH with directory path containing dylint lints
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
          with:
            toolchain: 1.65.0
        - run: cargo +1.65.0 install cargo-dylint dylint-link
        - run: cargo +1.65.0 dylint --workspace --all
  rustfmt:
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
          with:
            components: rustfmt
        - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
          with:
            command: fmt
            args: -- --check --color always
  python-format:
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - run: pip3 install -r ./requirements.txt
        - run: black --check --diff --color ./nat-lab
  natlab-typecheck:
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        - run: pip3 install -r ./nat-lab/requirements.txt
        - run: ./run_local.py --nobuild --notests
          working-directory: nat-lab
