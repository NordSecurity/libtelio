[package]
name = "systests"
version = "0.1.0"
edition = "2018"
license = "GPL-3.0-only"
repository = "https://github.com/NordSecurity/libtelio"

[[bin]]
name = "systests"

[dependencies]
dersp = { git = "https://github.com/mathiaspeters/dersp.git", branch = "librarification"}
env_logger = "0.10.1"
dirs = "4.0.0"
reqwest = { version = "0.11.16", default-features = false, features = [
    "json",
    "blocking",
    "rustls-tls",
] }
rustyline = "11.0.0"
shellwords = "1.1.0"
# Used only for checking if the daemon is running.
sysinfo = { version = "0.30.11", optional = true }
# Used as a lightweight and safe (because a TCP server has the risk of remote code execution)
# way for the API and daemon to communicate.
# Tokio support is needed, because the daemon runs on the async runtime.
interprocess = { version = "1.2.1", optional = true }

anyhow.workspace = true
base64.workspace = true
clap.workspace = true
crypto_box.workspace = true
hex.workspace = true
ipnet.workspace = true
futures.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-appender.workspace = true
parking_lot.workspace = true
rand = { workspace = true, features = ["std", "std_rng"] }
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
thiserror.workspace = true
time.workspace = true
tokio = { workspace = true, features = ["full"] }

telio = { path = ".." }
telio-crypto.workspace = true
telio-model.workspace = true
telio-nat-detect.workspace = true
telio-proto.workspace = true
telio-relay.workspace = true
telio-sockets.workspace = true
telio-task.workspace = true
telio-traversal.workspace = true
telio-utils.workspace = true
telio-wg.workspace = true
