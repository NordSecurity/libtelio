[build]
rustflags = [ "-Aunknown_lints" ]
rustdocflags = [
  "--html-in-header", "./rustdoc/header.html",
  "--html-after-content", "./rustdoc/multi-code.html",
  "--html-after-content", "./rustdoc/footer.html",
]

[target.'cfg(unix)']
runner = './test_runner.sh'

[net]
git-fetch-with-cli = true

[target.x86_64-unknown-linux-gnu]
linker = "linkers/d-x86_64-linux-gnu-gcc"

[target.aarch64-unknown-linux-gnu]
linker = "linkers/d-aarch64-linux-gnu-gcc"

[target.armv7-unknown-linux-gnueabihf]
linker = "linkers/d-arm-linux-gnueabihf-gcc"

[target.arm-unknown-linux-gnueabi]
linker = "linkers/d-arm-linux-gnueabi-gcc"

[target.x86_64-pc-windows-gnu]
linker = "x86_64-w64-mingw32-gcc"

[target.i686-pc-windows-gnu]
linker = "i686-w64-mingw32-gcc"

[target.aarch64-linux-android]
linker = "linkers/d-aarch64-linux-android21-clang"

[target.armv7-linux-androideabi]
linker = "linkers/d-armv7a-linux-androideabi21-clang"

[target.x86_64-linux-android]
linker = "linkers/d-x86_64-linux-android21-clang"

[target.i686-linux-android]
linker = "linkers/d-i686-linux-android21-clang"

[target.x86_64-openwrt-linux-musl]
linker = "linkers/d-x86_64-openwrt-linux-musl"

[target.aarch64-openwrt-linux-musl]
linker = "linkers/d-aarch64-openwrt-linux-musl"

[target.'cfg(any(target_os = "macos", target_os = "ios", target_os = "tvos", target_os = "tvos-sim"))']
rustflags = ["-C", "link-arg=-s"]
